/**
 * Generated by orval v6.16.0 üç∫
 * Do not edit manually.
 * Pokemon API
 * API for retrieving Pokemon data
 * OpenAPI spec version: 1.0.0
 */
import axios from 'axios'
import type {
  AxiosRequestConfig,
  AxiosResponse,
  AxiosError
} from 'axios'
import useSwr from 'swr'
import type {
  SWRConfiguration,
  Key
} from 'swr'
import type {
  Pokemon
} from './types'


  
  /**
 * @summary Get a list of all Pokemon
 */
export const getPokemon = (
     options?: AxiosRequestConfig
 ): Promise<AxiosResponse<Pokemon[]>> => {
    return axios.get(
      `/pokemon`,options
    );
  }


export const getGetPokemonKey = () => [`/pokemon`] as const;

    
export type GetPokemonQueryResult = NonNullable<Awaited<ReturnType<typeof getPokemon>>>
export type GetPokemonQueryError = AxiosError<unknown>

/**
 * @summary Get a list of all Pokemon
 */
export const useGetPokemon = <TError = AxiosError<unknown>>(
  options?: { swr?:SWRConfiguration<Awaited<ReturnType<typeof getPokemon>>, TError> & { swrKey?: Key, enabled?: boolean }, axios?: AxiosRequestConfig }

  ) => {

  const {swr: swrOptions, axios: axiosOptions} = options ?? {}

  const isEnabled = swrOptions?.enabled !== false
    const swrKey = swrOptions?.swrKey ?? (() => isEnabled ? getGetPokemonKey() : null);
  const swrFn = () => getPokemon(axiosOptions);

  const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(swrKey, swrFn, swrOptions)

  return {
    swrKey,
    ...query
  }
}


